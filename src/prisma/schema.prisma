generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

enum CancelMessage {
    cancel
    message
}

model User {
}

model Endereco {
    id          String         @id @default(auto()) @map("_id") @db.ObjectId
    rua         String
    numero      String
    complemento String
    cep         Int
    user        User?          @relation(fields: [userId], references: [id])
    userId      String?        @db.ObjectId
    bairro      VariacaoPreco? @relation(fields: [bairroId], references: [id])
    bairroId    String?        @db.ObjectId

    agendamentos Agendamento[]
}

model Pedido {
    id          String          @id @default(auto()) @map("_id") @db.ObjectId
    pagamento   FormaPagamento? @relation(fields: [pagamentoId], references: [id])
    pagamentoId String?         @db.ObjectId

    produto    Produto @relation(fields: [produtoId], references: [id]) // produto embutido (embedded)
    produtoId  String? @db.ObjectId
    quantidade String
    troco      String

    user   User?   @relation("PedidosUsuario", fields: [userId], references: [id])
    userId String? @db.ObjectId

    entregador   User?   @relation("PedidosEntregador", fields: [entregadorId], references: [id])
    entregadorId String? @db.ObjectId

    endereco   Endereco? @relation(fields: [enderecoId], references: [id])
    enderecoId String?   @db.ObjectId

    status     String
    total      String
    createdAt  String
    updatedAtt String
    tempo      String

    cancel        String // objeto embutido
    cancelMessage String

    @@map("pedidos")
}

model Produto {
    id              String          @id @default(auto()) @map("_id") @db.ObjectId
    imagem_produto  String
    nome_produto    String
    preco_produto   Int
    payment_type    FormaPagamento? @relation(fields: [payment_type_id], references: [id])
    payment_type_id String?         @db.ObjectId

    @@map("produtos")
}

model FormaPagamento {
    id        String @id @default(auto()) @map("_id") @db.ObjectId
    nomeForma String
    taxajuros Int
}

model VariacaoPreco {
}

model StoreAvailable {
}

model Agendamento {
    id         String    @id @default(auto()) @map("_id") @db.ObjectId
    datatime   String
    hora       String
    minutos    String
    user       User?     @relation(fields: [userId], references: [id])
    userId     String?   @db.ObjectId
    endereco   Endereco? @relation(fields: [enderecoId], references: [id])
    enderecoId String?   @db.ObjectId
    produto    Produto?  @relation(fields: [produtoId], references: [id])
    produtoId  String?   @db.ObjectId
    total      String?
    createdAt  String?
}
